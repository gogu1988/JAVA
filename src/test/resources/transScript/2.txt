In this lesson, we'll introduce you
to the OutSystems Architecture Canvas.We'll start the session
by discussing what it is,and then cover why it is important.By the end, we'll see how the
canvas fits in an enterprise ecosystem.Starting with the what ...The Architecture Canvas is
the adopted framework to designapplication architecture in OutSystems.It provides a systematic
approach to speed up architecture design.It is a multi-layer
framework, composed of three layers.Foundation, Core, and End-user.The two bottom layers are where
all the reusable services will beisolated and mapped in this framework.More specifically, the
Foundation layer contains all reusable,non-functional,
business-agnostic Modulessuch as connectors to external
systems, libraries, reusable UI patterns,and themes.In this layer, you should not
have any business-specific services.In the Core layer we will
implement core business services.These include the services
around business concepts such astheir dependencies and business rules.These core business
services should be system agnosticand abstract integration details
from the underlying foundation services.Finally, at the top
you have the end-userlayer that should not have any services.Here, you will support
all your user interactionsthrough user interfaces and processes.Now, let's see why you
should use the Architecture Canvas.It promotes the correct abstraction
of reusable services and components.Understanding and
having a clear definitionof the dependencies among all parts
helps optimize lifecycle independence.Finally, it helps you
minimize the impact of changes.This leads to easier maintenance and
more efficient application evolution.Now, let's see how the
Architecture Canvas andyour application architecture work
side by side in your enterprise ecosystem.OutSystems is one more
technology in your IT ecosystem.So you'll probably need to
integrate it with other existingin-house or cloud-based systems.To achieve that level of
integration, you can have integration services,which are merely technical
wrappers to external producers.The main goal of these services
is to normalize data structuresand abstract integration complexity,
like error handling and authentication.Remember that the
Foundation layer is wherenon-functional requirements are
defined, which are business agnostic and maybe reused across any business domain.The Core layer, in
addition to the core services,will contain all the
business rules, transactions,and data.You may also have APIs to be
consumed by external systems.These interfaces define
interactions between the internal core servicesand external consumers using
REST, SOAP, or any other type of API.Finally, the applications
in the end-user layer willserve both intranet and extranet users.Now you know the
Architecture Canvas, why it is important,and how it helps build
application architecture in OutSystems.