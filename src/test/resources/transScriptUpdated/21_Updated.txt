In this lesson, we'llstart by introducing you tothe four Style Guide common scenarios. By the end, you'll understandthe three possible and common waysof sharing and reusing a Style Guide. In the previouslesson, we learned that astyle guide helps define thestructure, look, and feel thatwill be shared across your applications. Here, we have the four commonscenarios of a Style Guide architecture. Let's check each of them in detail. Let's start by recappingthe built-in Style Guide,which is the base scenario. Here, your apps will use thebuilt-in Style Guide from OutSystems UI. The first module of your app willactually be a clone of the chosentemplate and willinclude the Menu, Login, anda reference to theOutSystems UI theme, among others. Other Modules insidethe app will reference thefirst Module you've created in that app. Minor customizations to the BaseTheme should be done inside the App Theme. The second scenario can be seenas an evolution of the previous one. Specializing a Style Guide makes sensewhen the changes you want to introduceto an existing Style Guide will beshared across multiple applications. The first step is to create theCustom Theme and Custom Patterns,which are actually anextension of another theme. Then, the CustomTemplate is cloned froman existing template and willreference the Custom Theme created before. New applications are createdfrom the cloned Custom Template,which in turn isbased on the Custom Theme. Doing this has the benefit ofinheriting the built-in theme, butit will have an impact onperformance, due to the extraimports of CSS and other resources. The clone scenario isapplicable when the amount of changes toan existing Style Guide are extensive. We recommend you clone thebuilt-in Style Guide and start from there. In this case, the CustomTheme is a clone of a Base Theme. Note that here, as opposedto the specialized scenario,the Custom Theme doesnot extend the Base Theme. The Custom Template is alsocloned, but from the Base Template, and itwill reference the created Custom Theme. Then, new applicationswill use the Custom Templateand will be based on the Custom Theme. Here, just like inthe previous scenario,the Base Theme andBase Template can be clonedfrom OutSystems UI themes andtemplates, or any other themesand templates you might already have. This option is the mostperformant one because it has one lessindirectionâ€”namely the referencebetween the Custom Theme and the Base Theme. However, it won't benefit fromchanges introduced inthe Base theme, sinceit is a completely different Module. This last scenario is kind of thefallback and should only be used whenthe Custom Style Guide you want tobuild cannot benefit from any existing theme. The suggested strategy consistsof cloning the template and theme,as in the previous scenario. However, here we recommend youclone the Base Theme from OutSystems UI. This theme contains the bareminimum required structure and styles. With this base structure, it isup to the front-end developer toexpand and design the theme from there. So far, we've seen differentapproaches to create a Custom Style Guide. Let's now see in more detailhow elements such as the menuand login can be shared acrossdifferent apps that use the same Style Guide. The first use case is when we havedifferent applications and each onerequires its own menu and login flow. In this case, the menu andlogin are defined in the template. This means that for everynew app, the menu and loginare cloned and specific to the new app. Note that different appsstill share the same Custom Theme. Another common use case is whenthe login flow needs to be shared,as usually happens with Intranet apps. The menu remains in the templateand will be specific for each app. However, the Login flow isactually defined in the CustomTheme and will be shared between apps. Finally, the portalscenario is where allapps have a shared menu and login flow. That is, they are bothdefined inside the Custom Theme,and all apps will reference them. Where the menu andlogin-related elements are defineddepends on your Style Guide'spurpose and how you want to reuse each one. 