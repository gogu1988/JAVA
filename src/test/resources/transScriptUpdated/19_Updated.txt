Hi there, and welcome to this session onPlugins, UI and Security, related toMobile Application Architecture.  In thissession, we'll talk about the differenttypes of plug-in services and thestructure of those services related tomobile applications we'll discuss how weneed to avoid monolithic UI modules andwe can do that by making sure we createthe correct type of themes and we useCSS well and then we'll wrap things upby talking about security and we'll lookat some of the areas aroundauthentication encryption and SSLpinning so let's go ahead and getstarted when building mobile apps it'simportant to consider plugins serviceswhich enable us to extend ourapplication and take advantage of devicecapabilities a plug-in is a native codemodule that is implemented in iOSAndroid or other system and exposes aJavaScript API so the plug-in can beconsumed through JavaScript in ourapplication these plugins are oftenstored and can be found in the gitrepository so if we wished to create anew plug-in from scratchwe would need to write the native codefor the target platform if we're luckyenough the type of plug-in we're lookingfor is already available from git andall we would need to do is make itaccessible inside of out systems to dothat the next step would be to create aplug-in service which is nothing morethan a module that would provide aclient action to call the plug-in itselfthe plug-in can be exposed throughpublic actions or public blocks thatcall the exposed API or potentiallygenerate events in this way ourapplication would be using actions toaccess the device capability or it wouldbe reacting to operations in the devicethrough the events that were thrownfor more details on how to create aplugin service check out the articleentitled create a plug-in to use mobilecapabilities in your application it canalso help to use the template pluginthat is available in the forge and thishas a base structure that provides agood starting point to create newplugins another important concept toremember is to avoid monolithic UImodules in out systems mobile apps allscreens must be placed in the samemodule and all the links inside of anapplication must use destinations andnot external URLs so the style guidetemplate module which includes theexception flow will be cloned when a newapplication is created this first modulewill not only contain the applicationtheme but should also be the only moduleto contain screens if it's the onlymodule to contain screens then to avoida monolithic module that includes all UIelements it can be helpful to splitother UI elements per functionality andwhen we say UI elements we mean blocksthat are related to different corewidgets basically the idea is to keepthe screens as simple layouts that haveplaceholders and load the content theyneed from blocks this approach allowsthe blocks to be grouped into functionalmodules such as Auto and health thesemodules can then have their ownindependent life cycles so keeping themseparate makes for easier deploymentsnow as we mentioned earlier the mobiletemplate will include the common flowand the menu artifacts and this helpsensure that all screen references existinside the same module now having thecorrect theme architecture is alsoimportant we want to avoid CSS in blocksor screens because they'll create extraCSS resources that will need to beloaded this can affect performancebecause the average mobile deviceto be impacted much more by resourceloading and cascading CSS then thetypical browser would another aspect toconsider is that if we start changingCSS in blocks or screens that this canpotentially affect screen transitionswhen we're moving from one screen toanother during the transition the twoscreens are loaded at the same time andthe CSS of the new screen may interferewith the previous screen to reduce thesetypes of issuesCSS should be limited to the themeitself as much as possible now that weknow how to handle the UI elements let'stalk a little bit about securityspecifically authentication andencryption it helps to use standardauthentication methods like Google orFacebook for online registration andlogin these are standards which can easethe process of logging in by allowingpeople to use their more common IDs andpasswords although the standardauthentication method works well whenwe're online if we're offline we need analternative way to log in such as afingerprint or a pin now these are notmeant as primary means of registrationbut can be added to a user profile afterregistration to allow for offline loginsalternatives like the pin should not beallowed to be used when the user isonline they should only be allowed touse these in offline scenarios when thestandard services aren't available andif we use pins for offline logins weshould also subject these to avalidation date so that if a userdoesn't perform an offline login for acertain period of time we shouldactually require the user to perform anonline login another extremely importantpoint is that passwords should never bestored in local storage because it canbe accessed more easily and thenpotentially hacked we should alsoencrypt sensitive data that's beingstored locally on the device andonly the sensitive data otherwise weincur the performance overhead ofencrypting and decrypting all of thedata oftentimes the trickier part ofthis recommendation is determining whatis really sensitive data anothersecurity recommendation is SSL pinningthere is an SSL pinning plug-inavailable for free on the forge thatadds extra security to httpcommunicationson mobile apps transmitting sensitivedata SSL pinning which is sometimesreferred to as HTTP public key pinninghelps us avoid man-in-the-middle attacksthis plug-in works on the client side byadding verification of a servercertificate against hashes of publickeys which have been pre bundled withthe mobile app if you'd like to learnmore we've included a link to all of thedetails so that you can learn more aboutthe plug-in so to review in this sessionwe talked about plug-in services wediscussed how to avoid monolithic UImodules by making sure we use themescorrectly and have the right CSS andthen from a security perspective wetalked about authentication encryptionand SSL pinning so that's it for pluginsUI and security thanks for listening