Welcome to the lesson onBase Style Guide Architectures. In this lesson, we'llgive you an overview of what aStyle Guide and a Live Style Guide are. After that, we'll explore theOutSystems UI built-in Style Guide. A Style Guide works asa tool and a guide forUX/UI designers and developers whenthey are designing and implementing apps. It defines a brand'svisual communication. On the other hand, a Live Style Guideis an instantiation of the Style Guide. It provides a visual guideto create a consistent andbeautiful user experience on your apps. A Live Style Guide isan app that showcasesthe actual elements and follows theStyle Guide rules and best practices. OutSystems UI is a framework thatprovides a series of elements to helpcreate Reactive Web and Mobile apps. It provides threeelements to help with that. The Theme - For the lookand feel of your applications,which includes Screenlayouts, the global stylesheet,and grid definitions. The Templates - Defines thestructure of the application Modules. A template containsScreen definitions andprovides a basic set offunctionalities, including authentication. Patterns (or blocks) - Providecommon and reusable UI functionality. Chat message, date picker,and carousel are a few examples. In terms of architecture,we have several elements. The main reusable theme containsthe main CSS styles and classes. The template Modulecontains the base definition(such as references to the theme)and common layouts and menus that canbe shared between several applications. This Module is automaticallycloned when you create the firstModule inside a Service Studio app. The patterns include UIand Widgets that are standard,reusable components. The Live Style Guideincludes Screen examples,so developers can understand theStyle Guide's look and patterns. Other Modules withinyour app will referencethe App Theme and reuse it in orderto keep a consistent look and feel. So, why is it important todefine a Style Guide architecture?If you don't do it up front,some issues can occur later on. In terms ofperformance, it is importantto only load the necessaryresources, such as images,CSS, and JavaScript. All apps can easilyadopt the same Style Guide,reducing long-term maintenance andrefactoring due to the fact that alllook and feel assets are centralized. It will also helpdevelopment by reducing the dispersionof the look-and-feel code acrossseveral Modules and preventing custominline styles across many Modules. These are some advantages ofdefining a Style Guide up front. In the next scenario, we'll see how theOutSystems UI Style Guide is structured. When the first UI Moduleis created inside an app, itwill be a clone of the chosentemplate, which in turn references the theme. The template contains themenu and login UI and logic. Those elements are also clonedinto the first Module of application. This means that theapplication will have its own menu blockand also the exception handlingflow, where authentication is done. The application theme is the place todo minor look-and-feel customizations. It is also the placeto customize the login,menu, or the common header. When more Modules arecreated inside the app,they will reference thefirst Moduleâ€”the App Theme. In the next lesson, we'll seehow this works in Service Studio. 